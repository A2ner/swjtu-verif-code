[1mdiff --git a/network_layers_plain.prototxt b/network_layers_plain.prototxt[m
[1mindex f4df429..104f079 100644[m
[1m--- a/network_layers_plain.prototxt[m
[1m+++ b/network_layers_plain.prototxt[m
[36m@@ -13,7 +13,7 @@[m [mlayer{[m
     }[m
     data_param{[m
         source:"data/swjtu_verif_train_lmdb"[m
[31m-        batch_size:1000[m
[32m+[m[32m        batch_size:4096[m
         backend:LMDB[m
     }[m
 }[m
[36m@@ -31,7 +31,7 @@[m [mlayer{[m
     }[m
     data_param{[m
         source:"data/swjtu_verif_test_lmdb"[m
[31m-        batch_size:500[m
[32m+[m[32m        batch_size:1024[m
         backend:LMDB[m
     }[m
 }[m
[36m@@ -59,13 +59,20 @@[m [mlayer{[m
 }[m
 [m
 [m
[31m-[m
 layer{[m
     name:"output_loss"[m
[31m-    type:"SoftmaxWithLoss"[m
[32m+[m[32m    type:"Softmax"[m
     bottom:"ip"[m
[32m+[m[32m    top:"softmax"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mlayer{[m
[32m+[m[32m    name:"loss"[m
[32m+[m[32m    type:"MultinomialLogisticLoss"[m
[32m+[m[32m    bottom:"softmax"[m
     bottom:"label"[m
     top:"loss"[m
[32m+[m
 }[m
 [m
 layer{[m
[36m@@ -74,6 +81,9 @@[m [mlayer{[m
     include{[m
         phase:TEST[m
     }[m
[32m+[m[32m    accuracy_param{[m
[32m+[m[32m        top_k:1[m
[32m+[m[32m    }[m
     bottom:"ip"[m
     bottom:"label"[m
     top:"accuracy"[m
[1mdiff --git a/solver.prototxt b/solver.prototxt[m
[1mindex 094f183..b9f7ee2 100644[m
[1m--- a/solver.prototxt[m
[1m+++ b/solver.prototxt[m
[36m@@ -11,7 +11,7 @@[m [mbase_lr: 0.0001[m
 # Drop the learning rate by a factor of gamma[m
 gamma: 0.1[m
 # Drop the learning rate every stepsize iterations[m
[31m-stepsize: 4000[m
[32m+[m[32mstepsize: 2000[m
 # max iterations times[m
 max_iter: 20000[m
 # momentum(friction)[m
